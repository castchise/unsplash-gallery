{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-playground\\\\unsplash-test\\\\src\\\\components\\\\ImageContainer\\\\image-container.components.jsx\";\nimport React from \"react\";\nimport { createApi } from \"unsplash-js\";\nimport LazyImage from \"../LazyImage/lazy-image.component\";\nimport Masonry from \"react-masonry-css\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ImageContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.updateListOnScroll = async () => {\n      const pagePercentageScrolled = Math.floor(window.scrollY / (this.getDocHeight() - window.innerHeight) * 100);\n\n      if (pagePercentageScrolled > 90 && !this.state.loading) {\n        this.setState(prevState => ({\n          page: prevState.page + 1,\n          loading: !prevState.loading\n        }));\n        await this.updatePhotos(20);\n        this.setState(prevState => ({\n          loading: !prevState.loading\n        }));\n      }\n    };\n\n    this.getDocHeight = () => {\n      return Math.max(document.body.scrollHeight, document.documentElement.scrollHeight, document.body.offsetHeight, document.documentElement.offsetHeight, document.body.clientHeight, document.documentElement.clientHeight);\n    };\n\n    this.updatePhotos = async itemsCount => {\n      const unsplash = createApi({\n        accessKey: process.env.REACT_APP_UNSPLASH_ACCESS_KEY\n      });\n      const {\n        response\n      } = await unsplash.photos.list({\n        page: this.state.page,\n        perPage: itemsCount || 15\n      });\n      const updatedList = this.state.photosList.concat(response.results.filter(item => {\n        if (!item.sponsorship) {\n          item.loaded = false;\n          return item;\n        }\n\n        return false;\n      }) // remove AD pictures\n      );\n      this.setState({\n        photosList: updatedList\n      });\n    };\n\n    this.state = {\n      photosList: [],\n      page: 1,\n      loading: false\n    };\n  }\n\n  async componentDidMount() {\n    await this.updatePhotos();\n    window.addEventListener(\"scroll\", this.updateListOnScroll);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-10 mx-auto\",\n      style: {\n        maxWidth: 1200\n      },\n      children: /*#__PURE__*/_jsxDEV(Masonry, {\n        breakpointCols: 3,\n        className: \"my-masonry-grid flex -ml-5\",\n        columnClassName: \"my-masonry-grid_column bg-clip-padding pl-5\",\n        children: this.state.photosList.map(photo => photo.blur_hash ? /*#__PURE__*/_createElement(LazyImage, { ...photo,\n          key: photo.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 31\n          }\n        }) : null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/react-playground/unsplash-test/src/components/ImageContainer/image-container.components.jsx"],"names":["React","createApi","LazyImage","Masonry","ImageContainer","Component","constructor","updateListOnScroll","pagePercentageScrolled","Math","floor","window","scrollY","getDocHeight","innerHeight","state","loading","setState","prevState","page","updatePhotos","max","document","body","scrollHeight","documentElement","offsetHeight","clientHeight","itemsCount","unsplash","accessKey","process","env","REACT_APP_UNSPLASH_ACCESS_KEY","response","photos","list","perPage","updatedList","photosList","concat","results","filter","item","sponsorship","loaded","componentDidMount","addEventListener","render","maxWidth","map","photo","blur_hash","id"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { createApi } from \"unsplash-js\";\n\nimport LazyImage from \"../LazyImage/lazy-image.component\";\nimport Masonry from \"react-masonry-css\";\n\nexport default class ImageContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      photosList: [],\n      page: 1,\n      loading: false\n    };\n  }\n\n  async componentDidMount() {\n    await this.updatePhotos();\n    window.addEventListener(\"scroll\", this.updateListOnScroll);\n  }\n\n  updateListOnScroll = async () => {\n    const pagePercentageScrolled = Math.floor(\n      (window.scrollY / (this.getDocHeight() - window.innerHeight)) * 100\n    );\n\n    if (pagePercentageScrolled > 90 && !this.state.loading) {\n      this.setState((prevState) => ({\n        page: prevState.page + 1,\n        loading: !prevState.loading\n      }));\n      await this.updatePhotos(20);\n      this.setState((prevState) => ({ loading: !prevState.loading }));\n    }\n  };\n\n  getDocHeight = () => {\n    return Math.max(\n      document.body.scrollHeight,\n      document.documentElement.scrollHeight,\n      document.body.offsetHeight,\n      document.documentElement.offsetHeight,\n      document.body.clientHeight,\n      document.documentElement.clientHeight\n    );\n  };\n\n  updatePhotos = async (itemsCount) => {\n    const unsplash = createApi({\n      accessKey: process.env.REACT_APP_UNSPLASH_ACCESS_KEY\n    });\n    const { response } = await unsplash.photos.list({\n      page: this.state.page,\n      perPage: itemsCount || 15\n    });\n    const updatedList = this.state.photosList.concat(\n      response.results.filter((item) => {\n        if (!item.sponsorship) {\n          item.loaded = false;\n          return item;\n        }\n        return false;\n      }) // remove AD pictures\n    );\n\n    this.setState({ photosList: updatedList });\n  };\n\n  render() {\n    return (\n      <div className=\"mt-10 mx-auto\" style={{ maxWidth: 1200 }}>\n        <Masonry\n          breakpointCols={3}\n          className=\"my-masonry-grid flex -ml-5\"\n          columnClassName=\"my-masonry-grid_column bg-clip-padding pl-5\"\n        >\n          {this.state.photosList.map((photo) =>\n            photo.blur_hash ? <LazyImage {...photo} key={photo.id} /> : null\n          )}\n        </Masonry>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}