{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-playground\\\\unsplash-test\\\\src\\\\App.js\";\nimport \"./App.css\";\nimport { createApi } from \"unsplash-js\";\nimport React from \"react\";\nimport LazyImage from \"./LazyImage/lazy-image.component\";\nimport Masonry from \"react-masonry-css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst browserApi = createApi({\n  apiUrl: \"https://mywebsite.com/unsplash-proxy\"\n});\nconst masonryOpts = {\n  transitionDuration: 0,\n  columnWidth: 100\n};\nexport class App extends React.Component {\n  constructor() {\n    super();\n\n    this.calculateScroll = e => {\n      if (window.scrollY + window.innerHeight >= document.body.offsetHeight - document.body.offsetHeight * 0.2) {\n        this.setState({\n          page: this.state.page + 1\n        });\n        this.updatePhotos(20);\n      }\n    };\n\n    this.updatePhotos = async itemsCount => {\n      console.log(\"calling\");\n      const unsplash = createApi({\n        accessKey: \"0ZpmaJxEBHSlQAtQ4_EaJ1wSe1J5S-c1WTEA8duYfOU\"\n      });\n      const {\n        response\n      } = await unsplash.photos.list({\n        page: this.state.page,\n        perPage: itemsCount || 8\n      });\n      const updatedList = this.state.photosList.concat(response.results.filter(item => {\n        console.log(item.sponsorship);\n\n        if (!item.sponsorship) {\n          item.loaded = false;\n          return item;\n        }\n\n        return false;\n      }) // remove AD pictures\n      );\n      this.setState({\n        photosList: updatedList\n      });\n    };\n\n    this.updateLoadState = (item, loadstate) => {\n      console.log(item);\n    };\n\n    this.state = {\n      photosList: [],\n      page: 1\n    };\n  }\n\n  async componentDidMount() {\n    await this.updatePhotos(); // window.addEventListener(\"scroll\", this.calculateScroll);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container grid mx-auto\",\n      children: /*#__PURE__*/_jsxDEV(Masonry, {\n        options: masonryOpts,\n        disableImagesLoaded: false // default false\n        ,\n        updateOnEachImageLoad: false // default false and works only if disableImagesLoaded is false\n        ,\n        children: this.state.photosList.map(photo => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: photo.urls.regular,\n            alt: photo.alt_description,\n            className: `max-width-400`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this) // <LazyImage\n        //   {...photo}\n        //   key={photo.id}\n        //   className=\"mason-img\"\n        // />\n        )\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["D:/react-playground/unsplash-test/src/App.js"],"names":["createApi","React","LazyImage","Masonry","browserApi","apiUrl","masonryOpts","transitionDuration","columnWidth","App","Component","constructor","calculateScroll","e","window","scrollY","innerHeight","document","body","offsetHeight","setState","page","state","updatePhotos","itemsCount","console","log","unsplash","accessKey","response","photos","list","perPage","updatedList","photosList","concat","results","filter","item","sponsorship","loaded","updateLoadState","loadstate","componentDidMount","render","map","photo","urls","regular","alt_description"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport { createApi } from \"unsplash-js\";\nimport React from \"react\";\n\nimport LazyImage from \"./LazyImage/lazy-image.component\";\n\nimport Masonry from \"react-masonry-css\";\n\nconst browserApi = createApi({\n  apiUrl: \"https://mywebsite.com/unsplash-proxy\"\n});\n\nconst masonryOpts = { transitionDuration: 0, columnWidth: 100 };\nexport class App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      photosList: [],\n      page: 1\n    };\n  }\n\n  async componentDidMount() {\n    await this.updatePhotos();\n    // window.addEventListener(\"scroll\", this.calculateScroll);\n  }\n\n  calculateScroll = (e) => {\n    if (\n      window.scrollY + window.innerHeight >=\n      document.body.offsetHeight - document.body.offsetHeight * 0.2\n    ) {\n      this.setState({ page: this.state.page + 1 });\n      this.updatePhotos(20);\n    }\n  };\n\n  updatePhotos = async (itemsCount) => {\n    console.log(\"calling\");\n    const unsplash = createApi({\n      accessKey: \"0ZpmaJxEBHSlQAtQ4_EaJ1wSe1J5S-c1WTEA8duYfOU\"\n    });\n    const { response } = await unsplash.photos.list({\n      page: this.state.page,\n      perPage: itemsCount || 8\n    });\n    const updatedList = this.state.photosList.concat(\n      response.results.filter((item) => {\n        console.log(item.sponsorship);\n        if (!item.sponsorship) {\n          item.loaded = false;\n          return item;\n        }\n        return false;\n      }) // remove AD pictures\n    );\n\n    this.setState({ photosList: updatedList });\n  };\n\n  updateLoadState = (item, loadstate) => {\n    console.log(item);\n  };\n\n  render() {\n    return (\n      <div className=\"container grid mx-auto\">\n        <Masonry\n          options={masonryOpts}\n          disableImagesLoaded={false} // default false\n          updateOnEachImageLoad={false} // default false and works only if disableImagesLoaded is false\n        >\n          {this.state.photosList.map((photo) => (\n            <div>\n              <img\n                src={photo.urls.regular}\n                alt={photo.alt_description}\n                className={`max-width-400`}\n              />\n            </div>\n            // <LazyImage\n            //   {...photo}\n            //   key={photo.id}\n            //   className=\"mason-img\"\n            // />\n          ))}\n        </Masonry>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}