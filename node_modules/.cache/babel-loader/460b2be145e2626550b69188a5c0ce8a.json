{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-playground\\\\unsplash-test\\\\src\\\\LazyImage\\\\lazy-image.component.jsx\";\nimport React from \"react\";\nimport { Blurhash } from \"react-blurhash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class LazyImage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      height: 600,\n      width: 400\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.height < this.props.width) {\n      this.setState({\n        height: 400\n      });\n    }\n\n    new Masonry(document.querySelector(\".grid\"), {\n      itemSelector: \".grid-item\",\n      columnWidth: 200\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative\",\n      style: {\n        height: this.state.height\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: this.props.urls.regular,\n        alt: this.props.alt_description,\n        width: this.state.width,\n        height: this.state.height,\n        className: `absolute inset-0 transition-all ${this.state.isLoaded ? \"opacity-100\" : \"opacity-0\"} max-w-400`,\n        onLoad: () => {\n          this.setState({\n            isLoaded: true\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Blurhash, {\n        hash: this.props.blur_hash,\n        width: this.state.width,\n        height: this.state.height,\n        resolutionX: 32,\n        resolutionY: 32,\n        punch: 1,\n        className: `absolute inset-0 transition-all ${this.state.isLoaded ? \"opacity-0 \" : \"opacity-100\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/react-playground/unsplash-test/src/LazyImage/lazy-image.component.jsx"],"names":["React","Blurhash","LazyImage","Component","constructor","props","state","isLoaded","height","width","componentDidMount","setState","Masonry","document","querySelector","itemSelector","columnWidth","render","urls","regular","alt_description","blur_hash"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,gBAAzB;;AAEA,eAAe,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AACrDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,KADC;AAEXC,MAAAA,MAAM,EAAE,GAFG;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAI,KAAKL,KAAL,CAAWG,MAAX,GAAoB,KAAKH,KAAL,CAAWI,KAAnC,EAA0C;AACxC,WAAKE,QAAL,CAAc;AAAEH,QAAAA,MAAM,EAAE;AAAV,OAAd;AACD;;AAED,QAAII,OAAJ,CAAYC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAZ,EAA6C;AAC3CC,MAAAA,YAAY,EAAE,YAD6B;AAE3CC,MAAAA,WAAW,EAAE;AAF8B,KAA7C;AAID;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,KAAK,EAAE;AAAET,QAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWE;AAArB,OAAjC;AAAA,8BACE;AACE,QAAA,GAAG,EAAE,KAAKH,KAAL,CAAWa,IAAX,CAAgBC,OADvB;AAEE,QAAA,GAAG,EAAE,KAAKd,KAAL,CAAWe,eAFlB;AAGE,QAAA,KAAK,EAAE,KAAKd,KAAL,CAAWG,KAHpB;AAIE,QAAA,MAAM,EAAE,KAAKH,KAAL,CAAWE,MAJrB;AAKE,QAAA,SAAS,EAAG,mCACV,KAAKF,KAAL,CAAWC,QAAX,GAAsB,aAAtB,GAAsC,WACvC,YAPH;AAQE,QAAA,MAAM,EAAE,MAAM;AACZ,eAAKI,QAAL,CAAc;AAAEJ,YAAAA,QAAQ,EAAE;AAAZ,WAAd;AACD;AAVH;AAAA;AAAA;AAAA;AAAA,cADF,eAaE,QAAC,QAAD;AACE,QAAA,IAAI,EAAE,KAAKF,KAAL,CAAWgB,SADnB;AAEE,QAAA,KAAK,EAAE,KAAKf,KAAL,CAAWG,KAFpB;AAGE,QAAA,MAAM,EAAE,KAAKH,KAAL,CAAWE,MAHrB;AAIE,QAAA,WAAW,EAAE,EAJf;AAKE,QAAA,WAAW,EAAE,EALf;AAME,QAAA,KAAK,EAAE,CANT;AAOE,QAAA,SAAS,EAAG,mCACV,KAAKF,KAAL,CAAWC,QAAX,GAAsB,YAAtB,GAAqC,aACtC;AATH;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA2BD;;AAlDoD","sourcesContent":["import React from \"react\";\nimport { Blurhash } from \"react-blurhash\";\n\nexport default class LazyImage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoaded: false,\n      height: 600,\n      width: 400\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.height < this.props.width) {\n      this.setState({ height: 400 });\n    }\n\n    new Masonry(document.querySelector(\".grid\"), {\n      itemSelector: \".grid-item\",\n      columnWidth: 200\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"relative\" style={{ height: this.state.height }}>\n        <img\n          src={this.props.urls.regular}\n          alt={this.props.alt_description}\n          width={this.state.width}\n          height={this.state.height}\n          className={`absolute inset-0 transition-all ${\n            this.state.isLoaded ? \"opacity-100\" : \"opacity-0\"\n          } max-w-400`}\n          onLoad={() => {\n            this.setState({ isLoaded: true });\n          }}\n        />\n        <Blurhash\n          hash={this.props.blur_hash}\n          width={this.state.width}\n          height={this.state.height}\n          resolutionX={32}\n          resolutionY={32}\n          punch={1}\n          className={`absolute inset-0 transition-all ${\n            this.state.isLoaded ? \"opacity-0 \" : \"opacity-100\"\n          }`}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}