{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-playground\\\\unsplash-test\\\\src\\\\components\\\\ImageContainer\\\\image-container.component.jsx\";\nimport React from \"react\";\nimport { createApi } from \"unsplash-js\"; // import LazyImage from \"../LazyImage/lazy-image.component\";\n\nimport ImageItem from \"../ImageItem/image-item.component\";\nimport Masonry from \"react-masonry-css\";\nimport { removeDuplicateObjs } from \"../../utils/index\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst breakpointColumnsObj = {\n  500: 1,\n  768: 2,\n  default: 3\n};\nexport default class ImageContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.updateListOnScroll = async () => {\n      const pagePercentageScrolled = Math.floor(window.scrollY / (this.getDocHeight() - window.innerHeight) * 100);\n\n      if (pagePercentageScrolled > 80 && !this.state.loading) {\n        this.setState(prevState => ({\n          page: prevState.page + 1,\n          loading: !prevState.loading\n        }));\n        await this.getUnsplashPhotos(20);\n        this.setState(prevState => ({\n          loading: !prevState.loading\n        }));\n      }\n    };\n\n    this.getDocHeight = () => {\n      return Math.max(document.body.scrollHeight, document.documentElement.scrollHeight, document.body.offsetHeight, document.documentElement.offsetHeight, document.body.clientHeight, document.documentElement.clientHeight);\n    };\n\n    this.getUnsplashPhotos = async itemsCount => {\n      const unsplash = createApi({\n        accessKey: process.env.REACT_APP_UNSPLASH_ACCESS_KEY\n      });\n      const {\n        response\n      } = await unsplash.photos.list({\n        page: this.state.page,\n        perPage: itemsCount || 15\n      });\n      const updatedList = this.state.photosList.concat(this.removeAdPictures(response.results));\n      this.setState({\n        photosList: updatedList\n      });\n    };\n\n    this.getLocalPhotos = () => {\n      const LS = window.localStorage;\n      let storedItems = [...JSON.parse(LS[\"unsplash-app-storage\"] || \"[]\")];\n      storedItems = removeDuplicateObjs(storedItems);\n      this.setState({\n        photosList: storedItems\n      });\n    };\n\n    this.removeAdPictures = list => list.filter(item => {\n      if (!item.sponsorship) {\n        item.loaded = false;\n        return item;\n      }\n\n      return false;\n    });\n\n    this.state = {\n      photosList: [],\n      page: 1,\n      loading: false\n    };\n  }\n\n  async componentDidMount() {\n    if (this.props.sourceType === \"unsplash\") {\n      await this.getUnsplashPhotos();\n    } else if (this.props.sourceType === \"local\") {\n      this.getLocalPhotos();\n    }\n\n    window.addEventListener(\"scroll\", this.updateListOnScroll);\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (this.props.sourceType === \"unsplash\" && prevProps.sourceType === \"local\") {\n      this.setState({\n        photosList: []\n      });\n      await this.getUnsplashPhotos();\n    } else if (this.props.sourceType === \"local\" && prevProps.sourceType === \"unsplash\") {\n      this.setState({\n        photosList: []\n      });\n      this.getLocalPhotos();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-5 sm:p-7 md:p-10\",\n      children: [/*#__PURE__*/_jsxDEV(Masonry, {\n        breakpointCols: breakpointColumnsObj,\n        className: \"my-masonry-grid flex -ml-5\",\n        columnClassName: \"my-masonry-grid_column bg-clip-padding pl-5\",\n        children: this.state.photosList.map(photo => /*#__PURE__*/_createElement(ImageItem, { ...photo,\n          key: photo.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), this.props.sourceType === \"local\" && this.state.photosList.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-5 w-full flex-col text-center md:mt-24\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-5 font-semibold text-3xl\",\n          children: \"No stored photos found! \\uD83D\\uDE22\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xl\",\n          children: \"Change source type and try to add them to your local gallery!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/react-playground/unsplash-test/src/components/ImageContainer/image-container.component.jsx"],"names":["React","createApi","ImageItem","Masonry","removeDuplicateObjs","breakpointColumnsObj","default","ImageContainer","Component","constructor","updateListOnScroll","pagePercentageScrolled","Math","floor","window","scrollY","getDocHeight","innerHeight","state","loading","setState","prevState","page","getUnsplashPhotos","max","document","body","scrollHeight","documentElement","offsetHeight","clientHeight","itemsCount","unsplash","accessKey","process","env","REACT_APP_UNSPLASH_ACCESS_KEY","response","photos","list","perPage","updatedList","photosList","concat","removeAdPictures","results","getLocalPhotos","LS","localStorage","storedItems","JSON","parse","filter","item","sponsorship","loaded","componentDidMount","props","sourceType","addEventListener","componentDidUpdate","prevProps","render","map","photo","id","length"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { createApi } from \"unsplash-js\";\n\n// import LazyImage from \"../LazyImage/lazy-image.component\";\nimport ImageItem from \"../ImageItem/image-item.component\";\nimport Masonry from \"react-masonry-css\";\nimport { removeDuplicateObjs } from \"../../utils/index\";\n\nconst breakpointColumnsObj = {\n  500: 1,\n  768: 2,\n  default: 3\n};\n\nexport default class ImageContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      photosList: [],\n      page: 1,\n      loading: false\n    };\n  }\n\n  async componentDidMount() {\n    if (this.props.sourceType === \"unsplash\") {\n      await this.getUnsplashPhotos();\n    } else if (this.props.sourceType === \"local\") {\n      this.getLocalPhotos();\n    }\n    window.addEventListener(\"scroll\", this.updateListOnScroll);\n  }\n\n  updateListOnScroll = async () => {\n    const pagePercentageScrolled = Math.floor(\n      (window.scrollY / (this.getDocHeight() - window.innerHeight)) * 100\n    );\n\n    if (pagePercentageScrolled > 80 && !this.state.loading) {\n      this.setState((prevState) => ({\n        page: prevState.page + 1,\n        loading: !prevState.loading\n      }));\n      await this.getUnsplashPhotos(20);\n      this.setState((prevState) => ({ loading: !prevState.loading }));\n    }\n  };\n\n  async componentDidUpdate(prevProps) {\n    if (\n      this.props.sourceType === \"unsplash\" &&\n      prevProps.sourceType === \"local\"\n    ) {\n      this.setState({ photosList: [] });\n      await this.getUnsplashPhotos();\n    } else if (\n      this.props.sourceType === \"local\" &&\n      prevProps.sourceType === \"unsplash\"\n    ) {\n      this.setState({ photosList: [] });\n      this.getLocalPhotos();\n    }\n  }\n\n  getDocHeight = () => {\n    return Math.max(\n      document.body.scrollHeight,\n      document.documentElement.scrollHeight,\n      document.body.offsetHeight,\n      document.documentElement.offsetHeight,\n      document.body.clientHeight,\n      document.documentElement.clientHeight\n    );\n  };\n\n  getUnsplashPhotos = async (itemsCount) => {\n    const unsplash = createApi({\n      accessKey: process.env.REACT_APP_UNSPLASH_ACCESS_KEY\n    });\n    const { response } = await unsplash.photos.list({\n      page: this.state.page,\n      perPage: itemsCount || 15\n    });\n    const updatedList = this.state.photosList.concat(\n      this.removeAdPictures(response.results)\n    );\n    this.setState({ photosList: updatedList });\n  };\n\n  getLocalPhotos = () => {\n    const LS = window.localStorage;\n    let storedItems = [...JSON.parse(LS[\"unsplash-app-storage\"] || \"[]\")];\n    storedItems = removeDuplicateObjs(storedItems);\n    this.setState({ photosList: storedItems });\n  };\n\n  removeAdPictures = (list) =>\n    list.filter((item) => {\n      if (!item.sponsorship) {\n        item.loaded = false;\n        return item;\n      }\n      return false;\n    });\n\n  render() {\n    return (\n      <div className=\"p-5 sm:p-7 md:p-10\">\n        <Masonry\n          breakpointCols={breakpointColumnsObj}\n          className=\"my-masonry-grid flex -ml-5\"\n          columnClassName=\"my-masonry-grid_column bg-clip-padding pl-5\"\n        >\n          {this.state.photosList.map((photo) => (\n            <ImageItem {...photo} key={photo.id} />\n          ))}\n        </Masonry>\n        {this.props.sourceType === \"local\" &&\n        this.state.photosList.length === 0 ? (\n          <div className=\"mt-5 w-full flex-col text-center md:mt-24\">\n            <p className=\"mb-5 font-semibold text-3xl\">\n              No stored photos found! 😢\n            </p>\n            <p className=\"text-xl\">\n              Change source type and try to add them to your local gallery!\n            </p>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}