{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-playground\\\\unsplash-test\\\\src\\\\App.js\";\nimport React from \"react\";\nimport ImageContainer from \"./components/ImageContainer/image-container.components\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"container\",\n  children: /*#__PURE__*/_jsxDEV(ImageContainer, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this);\n\n_c = App;\nexport default App; // import { createApi } from \"unsplash-js\";\n// import LazyImage from \"./components/LazyImage/lazy-image.component\";\n// import Masonry from \"react-masonry-css\";\n// export class App extends React.Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       photosList: [],\n//       page: 1,\n//       loading: false\n//     };\n//   }\n//   async componentDidMount() {\n//     await this.updatePhotos();\n//     window.addEventListener(\"scroll\", this.calculateScroll);\n//   }\n//   getDocHeight = () => {\n//     var D = document;\n//     return Math.max(\n//       D.body.scrollHeight,\n//       D.documentElement.scrollHeight,\n//       D.body.offsetHeight,\n//       D.documentElement.offsetHeight,\n//       D.body.clientHeight,\n//       D.documentElement.clientHeight\n//     );\n//   };\n//   calculateScroll = async (e) => {\n//     const percentageScrolled = Math.floor(\n//       (window.scrollY / (this.getDocHeight() - window.innerHeight)) * 100\n//     );\n//     if (percentageScrolled > 90 && !this.state.loading) {\n//       this.setState({ page: this.state.page + 1 });\n//       this.setState({ loading: true });\n//       await this.updatePhotos(20);\n//       this.setState({ loading: false });\n//     }\n//   };\n//   updatePhotos = async (itemsCount) => {\n//     const unsplash = createApi({\n//       accessKey: \"0ZpmaJxEBHSlQAtQ4_EaJ1wSe1J5S-c1WTEA8duYfOU\"\n//     });\n//     const { response } = await unsplash.photos.list({\n//       page: this.state.page,\n//       perPage: itemsCount || 15\n//     });\n//     const updatedList = this.state.photosList.concat(\n//       response.results.filter((item) => {\n//         if (!item.sponsorship) {\n//           item.loaded = false;\n//           return item;\n//         }\n//         return false;\n//       }) // remove AD pictures\n//     );\n//     this.setState({ photosList: updatedList });\n//   };\n//   render() {\n//     return (\n//       <div className=\"mt-10 mx-auto\" style={{ maxWidth: 1200 }}>\n//         <Masonry\n//           breakpointCols={3}\n//           className=\"my-masonry-grid flex -ml-5\"\n//           columnClassName=\"my-masonry-grid_column bg-clip-padding pl-5\"\n//         >\n//           {this.state.photosList.map((photo) =>\n//             photo.blur_hash ? <LazyImage {...photo} key={photo.id} /> : null\n//           )}\n//         </Masonry>\n//       </div>\n//     );\n//   }\n// }\n// export default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/react-playground/unsplash-test/src/App.js"],"names":["React","ImageContainer","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,cAAP,MAA2B,wDAA3B;AAEA,OAAO,WAAP;;;AAEA,MAAMC,GAAG,GAAG,mBACV;AAAK,EAAA,SAAS,EAAC,WAAf;AAAA,yBACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMA,G;AAMN,eAAeA,GAAf,C,CAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from \"react\";\n\nimport ImageContainer from \"./components/ImageContainer/image-container.components\";\n\nimport \"./App.css\";\n\nconst App = () => (\n  <div className=\"container\">\n    <ImageContainer />\n  </div>\n);\n\nexport default App;\n\n// import { createApi } from \"unsplash-js\";\n\n// import LazyImage from \"./components/LazyImage/lazy-image.component\";\n// import Masonry from \"react-masonry-css\";\n\n// export class App extends React.Component {\n//   constructor() {\n//     super();\n\n//     this.state = {\n//       photosList: [],\n//       page: 1,\n//       loading: false\n//     };\n//   }\n\n//   async componentDidMount() {\n//     await this.updatePhotos();\n//     window.addEventListener(\"scroll\", this.calculateScroll);\n//   }\n\n//   getDocHeight = () => {\n//     var D = document;\n//     return Math.max(\n//       D.body.scrollHeight,\n//       D.documentElement.scrollHeight,\n//       D.body.offsetHeight,\n//       D.documentElement.offsetHeight,\n//       D.body.clientHeight,\n//       D.documentElement.clientHeight\n//     );\n//   };\n\n//   calculateScroll = async (e) => {\n//     const percentageScrolled = Math.floor(\n//       (window.scrollY / (this.getDocHeight() - window.innerHeight)) * 100\n//     );\n\n//     if (percentageScrolled > 90 && !this.state.loading) {\n//       this.setState({ page: this.state.page + 1 });\n//       this.setState({ loading: true });\n//       await this.updatePhotos(20);\n//       this.setState({ loading: false });\n//     }\n//   };\n\n//   updatePhotos = async (itemsCount) => {\n//     const unsplash = createApi({\n//       accessKey: \"0ZpmaJxEBHSlQAtQ4_EaJ1wSe1J5S-c1WTEA8duYfOU\"\n//     });\n//     const { response } = await unsplash.photos.list({\n//       page: this.state.page,\n//       perPage: itemsCount || 15\n//     });\n//     const updatedList = this.state.photosList.concat(\n//       response.results.filter((item) => {\n//         if (!item.sponsorship) {\n//           item.loaded = false;\n//           return item;\n//         }\n//         return false;\n//       }) // remove AD pictures\n//     );\n\n//     this.setState({ photosList: updatedList });\n//   };\n\n//   render() {\n//     return (\n//       <div className=\"mt-10 mx-auto\" style={{ maxWidth: 1200 }}>\n//         <Masonry\n//           breakpointCols={3}\n//           className=\"my-masonry-grid flex -ml-5\"\n//           columnClassName=\"my-masonry-grid_column bg-clip-padding pl-5\"\n//         >\n//           {this.state.photosList.map((photo) =>\n//             photo.blur_hash ? <LazyImage {...photo} key={photo.id} /> : null\n//           )}\n//         </Masonry>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}