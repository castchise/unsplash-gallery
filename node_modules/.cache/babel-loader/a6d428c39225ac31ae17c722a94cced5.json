{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar base83_1 = require(\"./base83\");\n\nvar utils_1 = require(\"./utils\");\n\nvar error_1 = require(\"./error\");\n/**\n * Returns an error message if invalid or undefined if valid\n * @param blurhash\n */\n\n\nvar validateBlurhash = function (blurhash) {\n  if (!blurhash || blurhash.length < 6) {\n    throw new error_1.ValidationError(\"The blurhash string must be at least 6 characters\");\n  }\n\n  var sizeFlag = base83_1.decode83(blurhash[0]);\n  var numY = Math.floor(sizeFlag / 9) + 1;\n  var numX = sizeFlag % 9 + 1;\n\n  if (blurhash.length !== 4 + 2 * numX * numY) {\n    throw new error_1.ValidationError(\"blurhash length mismatch: length is \" + blurhash.length + \" but it should be \" + (4 + 2 * numX * numY));\n  }\n};\n\nexports.isBlurhashValid = function (blurhash) {\n  try {\n    validateBlurhash(blurhash);\n  } catch (error) {\n    return {\n      result: false,\n      errorReason: error.message\n    };\n  }\n\n  return {\n    result: true\n  };\n};\n\nvar decodeDC = function (value) {\n  var intR = value >> 16;\n  var intG = value >> 8 & 255;\n  var intB = value & 255;\n  return [utils_1.sRGBToLinear(intR), utils_1.sRGBToLinear(intG), utils_1.sRGBToLinear(intB)];\n};\n\nvar decodeAC = function (value, maximumValue) {\n  var quantR = Math.floor(value / (19 * 19));\n  var quantG = Math.floor(value / 19) % 19;\n  var quantB = value % 19;\n  var rgb = [utils_1.signPow((quantR - 9) / 9, 2.0) * maximumValue, utils_1.signPow((quantG - 9) / 9, 2.0) * maximumValue, utils_1.signPow((quantB - 9) / 9, 2.0) * maximumValue];\n  return rgb;\n};\n\nvar decode = function (blurhash, width, height, punch) {\n  validateBlurhash(blurhash);\n  punch = punch | 1;\n  var sizeFlag = base83_1.decode83(blurhash[0]);\n  var numY = Math.floor(sizeFlag / 9) + 1;\n  var numX = sizeFlag % 9 + 1;\n  var quantisedMaximumValue = base83_1.decode83(blurhash[1]);\n  var maximumValue = (quantisedMaximumValue + 1) / 166;\n  var colors = new Array(numX * numY);\n\n  for (var i = 0; i < colors.length; i++) {\n    if (i === 0) {\n      var value = base83_1.decode83(blurhash.substring(2, 6));\n      colors[i] = decodeDC(value);\n    } else {\n      var value = base83_1.decode83(blurhash.substring(4 + i * 2, 6 + i * 2));\n      colors[i] = decodeAC(value, maximumValue * punch);\n    }\n  }\n\n  var bytesPerRow = width * 4;\n  var pixels = new Uint8ClampedArray(bytesPerRow * height);\n\n  for (var y = 0; y < height; y++) {\n    for (var x = 0; x < width; x++) {\n      var r = 0;\n      var g = 0;\n      var b = 0;\n\n      for (var j = 0; j < numY; j++) {\n        for (var i = 0; i < numX; i++) {\n          var basis = Math.cos(Math.PI * x * i / width) * Math.cos(Math.PI * y * j / height);\n          var color = colors[i + j * numX];\n          r += color[0] * basis;\n          g += color[1] * basis;\n          b += color[2] * basis;\n        }\n      }\n\n      var intR = utils_1.linearTosRGB(r);\n      var intG = utils_1.linearTosRGB(g);\n      var intB = utils_1.linearTosRGB(b);\n      pixels[4 * x + 0 + y * bytesPerRow] = intR;\n      pixels[4 * x + 1 + y * bytesPerRow] = intG;\n      pixels[4 * x + 2 + y * bytesPerRow] = intB;\n      pixels[4 * x + 3 + y * bytesPerRow] = 255; // alpha\n    }\n  }\n\n  return pixels;\n};\n\nexports.default = decode;","map":{"version":3,"sources":["../src/decode.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar base83_1 = require(\"./base83\");\nvar utils_1 = require(\"./utils\");\nvar error_1 = require(\"./error\");\n/**\n * Returns an error message if invalid or undefined if valid\n * @param blurhash\n */\nvar validateBlurhash = function (blurhash) {\n    if (!blurhash || blurhash.length < 6) {\n        throw new error_1.ValidationError(\"The blurhash string must be at least 6 characters\");\n    }\n    var sizeFlag = base83_1.decode83(blurhash[0]);\n    var numY = Math.floor(sizeFlag / 9) + 1;\n    var numX = (sizeFlag % 9) + 1;\n    if (blurhash.length !== 4 + 2 * numX * numY) {\n        throw new error_1.ValidationError(\"blurhash length mismatch: length is \" + blurhash.length + \" but it should be \" + (4 + 2 * numX * numY));\n    }\n};\nexports.isBlurhashValid = function (blurhash) {\n    try {\n        validateBlurhash(blurhash);\n    }\n    catch (error) {\n        return { result: false, errorReason: error.message };\n    }\n    return { result: true };\n};\nvar decodeDC = function (value) {\n    var intR = value >> 16;\n    var intG = (value >> 8) & 255;\n    var intB = value & 255;\n    return [utils_1.sRGBToLinear(intR), utils_1.sRGBToLinear(intG), utils_1.sRGBToLinear(intB)];\n};\nvar decodeAC = function (value, maximumValue) {\n    var quantR = Math.floor(value / (19 * 19));\n    var quantG = Math.floor(value / 19) % 19;\n    var quantB = value % 19;\n    var rgb = [\n        utils_1.signPow((quantR - 9) / 9, 2.0) * maximumValue,\n        utils_1.signPow((quantG - 9) / 9, 2.0) * maximumValue,\n        utils_1.signPow((quantB - 9) / 9, 2.0) * maximumValue\n    ];\n    return rgb;\n};\nvar decode = function (blurhash, width, height, punch) {\n    validateBlurhash(blurhash);\n    punch = punch | 1;\n    var sizeFlag = base83_1.decode83(blurhash[0]);\n    var numY = Math.floor(sizeFlag / 9) + 1;\n    var numX = (sizeFlag % 9) + 1;\n    var quantisedMaximumValue = base83_1.decode83(blurhash[1]);\n    var maximumValue = (quantisedMaximumValue + 1) / 166;\n    var colors = new Array(numX * numY);\n    for (var i = 0; i < colors.length; i++) {\n        if (i === 0) {\n            var value = base83_1.decode83(blurhash.substring(2, 6));\n            colors[i] = decodeDC(value);\n        }\n        else {\n            var value = base83_1.decode83(blurhash.substring(4 + i * 2, 6 + i * 2));\n            colors[i] = decodeAC(value, maximumValue * punch);\n        }\n    }\n    var bytesPerRow = width * 4;\n    var pixels = new Uint8ClampedArray(bytesPerRow * height);\n    for (var y = 0; y < height; y++) {\n        for (var x = 0; x < width; x++) {\n            var r = 0;\n            var g = 0;\n            var b = 0;\n            for (var j = 0; j < numY; j++) {\n                for (var i = 0; i < numX; i++) {\n                    var basis = Math.cos((Math.PI * x * i) / width) *\n                        Math.cos((Math.PI * y * j) / height);\n                    var color = colors[i + j * numX];\n                    r += color[0] * basis;\n                    g += color[1] * basis;\n                    b += color[2] * basis;\n                }\n            }\n            var intR = utils_1.linearTosRGB(r);\n            var intG = utils_1.linearTosRGB(g);\n            var intB = utils_1.linearTosRGB(b);\n            pixels[4 * x + 0 + y * bytesPerRow] = intR;\n            pixels[4 * x + 1 + y * bytesPerRow] = intG;\n            pixels[4 * x + 2 + y * bytesPerRow] = intB;\n            pixels[4 * x + 3 + y * bytesPerRow] = 255; // alpha\n        }\n    }\n    return pixels;\n};\nexports.default = decode;\n//# sourceMappingURL=decode.js.map"]},"metadata":{},"sourceType":"script"}