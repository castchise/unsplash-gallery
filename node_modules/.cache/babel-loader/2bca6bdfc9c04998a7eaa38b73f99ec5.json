{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-playground\\\\unsplash-test\\\\src\\\\components\\\\LazyImage\\\\lazy-image.component.jsx\";\nimport React from \"react\";\nimport { Blurhash } from \"react-blurhash\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class LazyImage extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoaded: false,\n      height: 600,\n      width: 400\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.height < this.props.width) {\n      this.setState({\n        height: 400\n      });\n    }\n  }\n\n  shouldComponentUpdate(nextProps) {\n    console.log(nextProps);\n    return true;\n  }\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"sss\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  } // render() {\n  //   return (\n  //     <div\n  //       className=\"relative mb-5\"\n  //       style={{\n  //         paddingBottom: `${(this.props.height / this.props.width) * 100}%`\n  //       }}\n  //     >\n  //       <img\n  //         src={this.props.urls.regular}\n  //         alt={this.props.alt_description}\n  //         width={this.state.width}\n  //         height={this.state.height}\n  //         className={`absolute rounded transition-all ${\n  //           this.state.isLoaded ? \"opacity-100\" : \"opacity-0\"\n  //         }`}\n  //         onLoad={() => {\n  //           this.setState({ isLoaded: true });\n  //         }}\n  //       />\n  //       <div\n  //         style={{ backgroundColor: this.props.color }}\n  //         className={`absolute inset-0 rounded transition-all ${\n  //           this.state.isLoaded ? \"opacity-0 \" : \"opacity-100\"\n  //         }`}\n  //       ></div>\n  //       <Blurhash\n  //         hash={this.props.blur_hash}\n  //         width={this.state.width}\n  //         height={this.state.height}\n  //         color={this.props.color}\n  //         resolutionX={32}\n  //         resolutionY={32}\n  //         punch={1}\n  //         className={`preload absolute inset-0 transition-all ${\n  //           this.state.isLoaded ? \"opacity-0 \" : \"opacity-100\"\n  //         }`}\n  //         style={{ maxHeight: this.state.height }}\n  //       />\n  //       <div style={{ backgroundColor: this.props.color }}></div>\n  //     </div>\n  //   );\n  // }\n\n\n}","map":{"version":3,"sources":["D:/react-playground/unsplash-test/src/components/LazyImage/lazy-image.component.jsx"],"names":["React","Blurhash","LazyImage","Component","constructor","state","isLoaded","height","width","componentDidMount","props","setState","shouldComponentUpdate","nextProps","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,OAAO,cAAP;;AAEA,eAAe,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AACrDC,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,KADC;AAEXC,MAAAA,MAAM,EAAE,GAFG;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAI,KAAKC,KAAL,CAAWH,MAAX,GAAoB,KAAKG,KAAL,CAAWF,KAAnC,EAA0C;AACxC,WAAKG,QAAL,CAAc;AAAEJ,QAAAA,MAAM,EAAE;AAAV,OAAd;AACD;AACF;;AAEDK,EAAAA,qBAAqB,CAACC,SAAD,EAAY;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,WAAO,IAAP;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACPF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAjB;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAzBoD,CA2BrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AArEqD","sourcesContent":["import React from \"react\";\nimport { Blurhash } from \"react-blurhash\";\n\nimport \"./styles.css\";\n\nexport default class LazyImage extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoaded: false,\n      height: 600,\n      width: 400\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.height < this.props.width) {\n      this.setState({ height: 400 });\n    }\n  }\n\n  shouldComponentUpdate(nextProps) {\n    console.log(nextProps);\n    return true;\n  }\n\n  render() {\n    console.log(this.props);\n    return <span>sss</span>;\n  }\n\n  // render() {\n  //   return (\n  //     <div\n  //       className=\"relative mb-5\"\n  //       style={{\n  //         paddingBottom: `${(this.props.height / this.props.width) * 100}%`\n  //       }}\n  //     >\n  //       <img\n  //         src={this.props.urls.regular}\n  //         alt={this.props.alt_description}\n  //         width={this.state.width}\n  //         height={this.state.height}\n  //         className={`absolute rounded transition-all ${\n  //           this.state.isLoaded ? \"opacity-100\" : \"opacity-0\"\n  //         }`}\n  //         onLoad={() => {\n  //           this.setState({ isLoaded: true });\n  //         }}\n  //       />\n  //       <div\n  //         style={{ backgroundColor: this.props.color }}\n  //         className={`absolute inset-0 rounded transition-all ${\n  //           this.state.isLoaded ? \"opacity-0 \" : \"opacity-100\"\n  //         }`}\n  //       ></div>\n  //       <Blurhash\n  //         hash={this.props.blur_hash}\n  //         width={this.state.width}\n  //         height={this.state.height}\n  //         color={this.props.color}\n  //         resolutionX={32}\n  //         resolutionY={32}\n  //         punch={1}\n  //         className={`preload absolute inset-0 transition-all ${\n  //           this.state.isLoaded ? \"opacity-0 \" : \"opacity-100\"\n  //         }`}\n  //         style={{ maxHeight: this.state.height }}\n  //       />\n  //       <div style={{ backgroundColor: this.props.color }}></div>\n  //     </div>\n  //   );\n  // }\n}\n"]},"metadata":{},"sourceType":"module"}